package com.jdbc.practice;

import java.sql.*;

public class JDBCCRUDApp {
    public static void main(String[] args) {
        try {
            // Register JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Connect to database
            System.out.println("Connecting to database...");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bacteria", "root", "4712");

            // Create statement
            Statement st = con.createStatement();
            
            // Check if records exist and clear if needed
            ResultSet checkRS = st.executeQuery("SELECT COUNT(*) FROM bacteria_info");
            checkRS.next();
            int count = checkRS.getInt(1);
            if (count > 0) {
                System.out.println("Clearing existing data...");
                st.executeUpdate("DELETE FROM bacteria_info");
            }
            
            // CREATE: Insert records
            System.out.println("Inserting records...");
            String insertQuery = "INSERT INTO bacteria_info VALUES('Streptococcus', 'Prokaryotic', 1, 'circle')";
            st.executeUpdate(insertQuery);
            
            insertQuery = "INSERT INTO bacteria_info VALUES('E.coli', 'Prokaryotic', 3, 'rod shaped')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Staphylococcus aureus', 'Prokaryotic', 2, 'spherical')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Bacillus subtilis', 'Prokaryotic', 4, 'rod shaped')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Vibrio cholerae', 'Prokaryotic', 1, 'comma shaped')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Helicobacter pylori', 'Prokaryotic', 1, 'spiral shaped')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Mycobacterium tuberculosis', 'Prokaryotic', 1, 'rod shaped')";
            st.executeUpdate(insertQuery);

            insertQuery = "INSERT INTO bacteria_info VALUES('Clostridium botulinum', 'Prokaryotic', 1, 'rod shaped')";
            st.executeUpdate(insertQuery);


            // READ: Select records
            System.out.println("Reading records...");
            String query = "SELECT * FROM bacteria_info";
            ResultSet rs = st.executeQuery(query);
            
            // Display records
            while(rs.next()) {
                System.out.println("Name: " + rs.getString("name") + " | Type: " + rs.getString("type") + 
                                 " | Size: " + rs.getInt("size") + " | Shape: " + rs.getString("shape"));
            }
            
            // UPDATE: Update a record
            System.out.println("Updating records...");
            String updateQuery = "UPDATE bacteria_info SET size=2 WHERE name='Streptococcus'";
            int rowsUpdated = st.executeUpdate(updateQuery);
            System.out.println(rowsUpdated + " row(s) updated");
            
            // DELETE: Delete a record
            System.out.println("Deleting records...");
            String deleteQuery = "DELETE FROM bacteria_info WHERE name='E.coli'";
            int rowsDeleted = st.executeUpdate(deleteQuery);
            System.out.println(rowsDeleted + " row(s) deleted");
            
            // Read again after modifications
            System.out.println("Final data:");
            rs = st.executeQuery(query);
            while(rs.next()) {
                System.out.println("Name: " + rs.getString("name") + " | Type: " + rs.getString("type") + 
                                 " | Size: " + rs.getInt("size") + " | Shape: " + rs.getString("shape"));
            }
            
            // Close resources
            checkRS.close();
            rs.close();
            st.close();
            con.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
